from machine import Pin, I2C
from ssd1306 import SSD1306_I2C 
import time
import network
from umqtt.simple import MQTTClient

Pin_Led = 2  
Pin_Sensor = 5  

led = Pin(Pin_Led, Pin.OUT)
sensor = Pin(Pin_Sensor, Pin.IN)

# Configura la conexión I2C para la pantalla OLED 
i2c = I2C(0, scl=Pin(22), sda=Pin(21))  
oled = SSD1306_I2C(128, 64, i2c)

MQTT_BROKER = "192.168.43.135"
MQTT_TOPIC = "utng/br/ky-017"
MQTT_PORT = 1883

def conectar_wifi():
    print("Conectando...", end="")
    sta_if = network.WLAN(network.STA_IF)
    sta_if.active(True)
    sta_if.connect('Adrian', '123456ad')  
    while not sta_if.isconnected():
        print(".", end="")
        time.sleep(0.3)
    print("WiFi Conectada!")
    return sta_if

def publicar_mensaje(msg):
    if isinstance(msg, int):
        msg = str(msg).encode()  # Convert integer to bytes
    client.publish(MQTT_TOPIC, msg)


conectar_wifi()
client = MQTTClient("", MQTT_BROKER, port=MQTT_PORT)
client.connect()

def verificar_inclinacion():
    while True:
        sensor_state = sensor.value()  # Recogemos la señal que se recibe por el pin del sensor

        if sensor_state == 1:
            led.on()
            oled.fill(0) 
            oled.text("Inclinacion: Si", 0, 0)
            oled.show()
            
            time.sleep(1)  
        else:
            led.off()
            oled.fill(0)  
            oled.text("Inclinacion: No", 0, 0)
            oled.show()
            publicar_mensaje(sensor_state)  # Send integer data directly
            print(sensor_state)
        
        time.sleep(0.1)

        
sta_if = conectar_wifi()

verificar_inclinacion()
